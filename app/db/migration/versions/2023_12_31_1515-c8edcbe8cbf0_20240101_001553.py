"""20240101_001553

Revision ID: c8edcbe8cbf0
Revises:
Create Date: 2023-12-31 15:15:55.538415+00:00

"""
import typing

import sqlalchemy as sa
from alembic import op

import app.db.__type__

# revision identifiers, used by Alembic.
revision: str = "c8edcbe8cbf0"
down_revision: str | None = None
branch_labels: str | typing.Sequence[str] | None = None
depends_on: str | typing.Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "playlist",
        sa.Column("youtube_pid", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_playlist")),
    )
    op.create_index(op.f("ix_playlist_uuid"), "playlist", ["uuid"], unique=True)
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("nickname", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("password_updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("email_verified_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("email_secret", sa.String(), nullable=True),
        sa.Column("last_signin_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("signin_fail_count", sa.Integer(), nullable=False),
        sa.Column("signin_failed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("locked_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("locked_by_uuid", sa.Uuid(), nullable=True),
        sa.Column("locked_reason", sa.String(), nullable=True),
        sa.Column("deleted_by_uuid", sa.Uuid(), nullable=True),
        sa.Column("private", sa.Boolean(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("profile_image", sa.String(), nullable=True),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("birth", sa.Date(), nullable=True),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["deleted_by_uuid"], ["user.uuid"], name=op.f("fk_user_deleted_by_uuid_user")),
        sa.ForeignKeyConstraint(["locked_by_uuid"], ["user.uuid"], name=op.f("fk_user_locked_by_uuid_user")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_user")),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix_user_nickname"), "user", ["nickname"], unique=True)
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_index(op.f("ix_user_uuid"), "user", ["uuid"], unique=True)
    op.create_table(
        "file",
        sa.Column("mimetype", sa.String(), nullable=True),
        sa.Column("path", app.db.__type__.PathType(), nullable=False),
        sa.Column("hash", sa.String(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("created_by_uuid", sa.Uuid(), nullable=False),
        sa.Column("deleted_by_uuid", sa.Uuid(), nullable=True),
        sa.Column("locked_by_uuid", sa.Uuid(), nullable=True),
        sa.Column("locked_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("locked_reason", sa.String(), nullable=True),
        sa.Column("private", sa.Boolean(), nullable=False),
        sa.Column("readable", sa.Boolean(), nullable=False),
        sa.Column("writable", sa.Boolean(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["created_by_uuid"], ["user.uuid"], name=op.f("fk_file_created_by_uuid_user")),
        sa.ForeignKeyConstraint(["deleted_by_uuid"], ["user.uuid"], name=op.f("fk_file_deleted_by_uuid_user")),
        sa.ForeignKeyConstraint(["locked_by_uuid"], ["user.uuid"], name=op.f("fk_file_locked_by_uuid_user")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_file")),
    )
    op.create_index(op.f("ix_file_created_by_uuid"), "file", ["created_by_uuid"], unique=False)
    op.create_index(op.f("ix_file_uuid"), "file", ["uuid"], unique=True)
    op.create_table(
        "playlistuserrelation",
        sa.Column("playlist_uuid", sa.Uuid(), nullable=False),
        sa.Column("user_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["playlist_uuid"], ["playlist.uuid"], name=op.f("fk_playlistuserrelation_playlist_uuid_playlist")
        ),
        sa.ForeignKeyConstraint(["user_uuid"], ["user.uuid"], name=op.f("fk_playlistuserrelation_user_uuid_user")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_playlistuserrelation")),
        sa.UniqueConstraint("playlist_uuid", "user_uuid", name=op.f("uq_playlistuserrelation_playlist_uuid")),
    )
    op.create_index(
        op.f("ix_playlistuserrelation_playlist_uuid"), "playlistuserrelation", ["playlist_uuid"], unique=False
    )
    op.create_index(op.f("ix_playlistuserrelation_user_uuid"), "playlistuserrelation", ["user_uuid"], unique=False)
    op.create_index(op.f("ix_playlistuserrelation_uuid"), "playlistuserrelation", ["uuid"], unique=True)
    op.create_table(
        "task",
        sa.Column("celery_task_name", sa.String(), nullable=False),
        sa.Column("celery_task_id", sa.String(), nullable=False),
        sa.Column("args", sa.JSON(), nullable=True),
        sa.Column("kwargs", sa.JSON(), nullable=True),
        sa.Column("startable", sa.Boolean(), nullable=False),
        sa.Column(
            "state",
            sa.Enum(
                "PENDING",
                "STARTED",
                "SUCCESS",
                "FAILURE",
                "RETRY",
                "REVOKED",
                name="celerytaskstatus",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["created_by"], ["user.uuid"], name=op.f("fk_task_created_by_user")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_task")),
    )
    op.create_index(op.f("ix_task_celery_task_id"), "task", ["celery_task_id"], unique=True)
    op.create_index(op.f("ix_task_celery_task_name"), "task", ["celery_task_name"], unique=False)
    op.create_index(op.f("ix_task_state"), "task", ["state"], unique=False)
    op.create_index(op.f("ix_task_uuid"), "task", ["uuid"], unique=True)
    op.create_table(
        "usersigninhistory",
        sa.Column("user_uuid", sa.Uuid(), nullable=False),
        sa.Column("ip", sa.String(), nullable=False),
        sa.Column("user_agent", sa.String(), nullable=False),
        sa.Column("client_token", sa.String(), nullable=True),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("next_uuid", sa.Uuid(), nullable=True),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["next_uuid"], ["usersigninhistory.uuid"], name=op.f("fk_usersigninhistory_next_uuid_usersigninhistory")
        ),
        sa.ForeignKeyConstraint(["user_uuid"], ["user.uuid"], name=op.f("fk_usersigninhistory_user_uuid_user")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_usersigninhistory")),
    )
    op.create_index(op.f("ix_usersigninhistory_next_uuid"), "usersigninhistory", ["next_uuid"], unique=False)
    op.create_index(op.f("ix_usersigninhistory_user_uuid"), "usersigninhistory", ["user_uuid"], unique=False)
    op.create_index(op.f("ix_usersigninhistory_uuid"), "usersigninhistory", ["uuid"], unique=True)
    op.create_table(
        "video",
        sa.Column("youtube_vid", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("thumbnail_uuid", sa.Uuid(), nullable=True),
        sa.Column("data", sa.JSON(), nullable=True),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["thumbnail_uuid"], ["file.uuid"], name=op.f("fk_video_thumbnail_uuid_file")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_video")),
    )
    op.create_index(op.f("ix_video_uuid"), "video", ["uuid"], unique=True)
    op.create_index(op.f("ix_video_youtube_vid"), "video", ["youtube_vid"], unique=True)
    op.create_table(
        "playlistvideorelation",
        sa.Column("playlist_uuid", sa.Uuid(), nullable=False),
        sa.Column("video_uuid", sa.Uuid(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["playlist_uuid"], ["playlist.uuid"], name=op.f("fk_playlistvideorelation_playlist_uuid_playlist")
        ),
        sa.ForeignKeyConstraint(["video_uuid"], ["video.uuid"], name=op.f("fk_playlistvideorelation_video_uuid_video")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_playlistvideorelation")),
        sa.UniqueConstraint("playlist_uuid", "index", name=op.f("uq_playlistvideorelation_playlist_uuid")),
    )
    op.create_index(op.f("ix_playlistvideorelation_index"), "playlistvideorelation", ["index"], unique=False)
    op.create_index(
        op.f("ix_playlistvideorelation_playlist_uuid"), "playlistvideorelation", ["playlist_uuid"], unique=False
    )
    op.create_index(op.f("ix_playlistvideorelation_uuid"), "playlistvideorelation", ["uuid"], unique=True)
    op.create_index(op.f("ix_playlistvideorelation_video_uuid"), "playlistvideorelation", ["video_uuid"], unique=False)
    op.create_table(
        "videofilerelation",
        sa.Column("video_uuid", sa.Uuid(), nullable=False),
        sa.Column("file_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["file_uuid"], ["file.uuid"], name=op.f("fk_videofilerelation_file_uuid_file")),
        sa.ForeignKeyConstraint(["video_uuid"], ["video.uuid"], name=op.f("fk_videofilerelation_video_uuid_video")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_videofilerelation")),
        sa.UniqueConstraint("video_uuid", "file_uuid", name=op.f("uq_videofilerelation_video_uuid")),
    )
    op.create_index(op.f("ix_videofilerelation_uuid"), "videofilerelation", ["uuid"], unique=True)
    op.create_index(op.f("ix_videofilerelation_video_uuid"), "videofilerelation", ["video_uuid"], unique=False)
    op.create_table(
        "videouserrelation",
        sa.Column("video_uuid", sa.Uuid(), nullable=False),
        sa.Column("user_uuid", sa.Uuid(), nullable=False),
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("modified_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("commit_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["user_uuid"], ["user.uuid"], name=op.f("fk_videouserrelation_user_uuid_user")),
        sa.ForeignKeyConstraint(["video_uuid"], ["video.uuid"], name=op.f("fk_videouserrelation_video_uuid_video")),
        sa.PrimaryKeyConstraint("uuid", name=op.f("pk_videouserrelation")),
        sa.UniqueConstraint("video_uuid", "user_uuid", name=op.f("uq_videouserrelation_video_uuid")),
    )
    op.create_index(op.f("ix_videouserrelation_user_uuid"), "videouserrelation", ["user_uuid"], unique=False)
    op.create_index(op.f("ix_videouserrelation_uuid"), "videouserrelation", ["uuid"], unique=True)
    op.create_index(op.f("ix_videouserrelation_video_uuid"), "videouserrelation", ["video_uuid"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_videouserrelation_video_uuid"), table_name="videouserrelation")
    op.drop_index(op.f("ix_videouserrelation_uuid"), table_name="videouserrelation")
    op.drop_index(op.f("ix_videouserrelation_user_uuid"), table_name="videouserrelation")
    op.drop_table("videouserrelation")
    op.drop_index(op.f("ix_videofilerelation_video_uuid"), table_name="videofilerelation")
    op.drop_index(op.f("ix_videofilerelation_uuid"), table_name="videofilerelation")
    op.drop_table("videofilerelation")
    op.drop_index(op.f("ix_playlistvideorelation_video_uuid"), table_name="playlistvideorelation")
    op.drop_index(op.f("ix_playlistvideorelation_uuid"), table_name="playlistvideorelation")
    op.drop_index(op.f("ix_playlistvideorelation_playlist_uuid"), table_name="playlistvideorelation")
    op.drop_index(op.f("ix_playlistvideorelation_index"), table_name="playlistvideorelation")
    op.drop_table("playlistvideorelation")
    op.drop_index(op.f("ix_video_youtube_vid"), table_name="video")
    op.drop_index(op.f("ix_video_uuid"), table_name="video")
    op.drop_table("video")
    op.drop_index(op.f("ix_usersigninhistory_uuid"), table_name="usersigninhistory")
    op.drop_index(op.f("ix_usersigninhistory_user_uuid"), table_name="usersigninhistory")
    op.drop_index(op.f("ix_usersigninhistory_next_uuid"), table_name="usersigninhistory")
    op.drop_table("usersigninhistory")
    op.drop_index(op.f("ix_task_uuid"), table_name="task")
    op.drop_index(op.f("ix_task_state"), table_name="task")
    op.drop_index(op.f("ix_task_celery_task_name"), table_name="task")
    op.drop_index(op.f("ix_task_celery_task_id"), table_name="task")
    op.drop_table("task")
    op.drop_index(op.f("ix_playlistuserrelation_uuid"), table_name="playlistuserrelation")
    op.drop_index(op.f("ix_playlistuserrelation_user_uuid"), table_name="playlistuserrelation")
    op.drop_index(op.f("ix_playlistuserrelation_playlist_uuid"), table_name="playlistuserrelation")
    op.drop_table("playlistuserrelation")
    op.drop_index(op.f("ix_file_uuid"), table_name="file")
    op.drop_index(op.f("ix_file_created_by_uuid"), table_name="file")
    op.drop_table("file")
    op.drop_index(op.f("ix_user_uuid"), table_name="user")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_nickname"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_playlist_uuid"), table_name="playlist")
    op.drop_table("playlist")
    # ### end Alembic commands ###
